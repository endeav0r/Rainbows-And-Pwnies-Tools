Brought to you by rainbowsandpwnies

/**************
* DESCRIPTION *
**************/
rop_tools is a tool to help with the identification of rop gadgets and the
building of rop chains. Coded in C, it quickly identifies rop gadgets in large
binaries. It makes this information available to lua scripts for rop chain
scripting goodness.

Currently supports 32-bit and 64-bit ELF binaries

/*************** 
* REQUIREMENTS *
***************/
udis86 and lua5.1
http://udis86.sourceforge.net/
http://www.lua.org/

/***********
* EXAMPLES *
***********/

./rop_tools 
rop_tools
brought to you by rainbowsandpwnies

./rop_tools [-cjr] [-d depth] (-e <elf> | -l <lua_file> [args])
  -c         search for call reg gadgets
  -d <depth> depth, in instructions, to search backwards
  -e <elf>   filename of elf to analyze
  -j         search for jmp reg gadgets
  -k         search for conditional jmp reg gadgets (for when your day is 
             really going that bad, and probably won't return anything)
  -l <lua>   runs lua script
  -r         search for ret gadgets

/*******************************************************************************
*******************************************************************************/

./rop_tools -e rop_tools -c -j -r -d 2 | tail -n 20
  0804d518:  83 eb 04 -- -- -- -- --   sub ebx, 0x4
  0804d51b:  ff d0 -- -- -- -- -- --   call eax

__do_global_ctors_aux + 15
  0804d515:  08 66 90 -- -- -- -- --   or [esi-0x70], ah
  0804d518:  83 eb 04 -- -- -- -- --   sub ebx, 0x4
  0804d51b:  ff d0 -- -- -- -- -- --   call eax

section: .fini
_fini + 9
  0804d535:  00 00 -- -- -- -- -- --   add [eax], al
  0804d537:  00 5b 81 -- -- -- -- --   add [ebx-0x7f], bl
  0804d53a:  c3 -- -- -- -- -- -- --   ret 

_fini + 19
  0804d545:  5b -- -- -- -- -- -- --   pop ebx
  0804d546:  c9 -- -- -- -- -- -- --   leave 
  0804d547:  c3 -- -- -- -- -- -- --   ret 

227 gadgets

/*******************************************************************************
*******************************************************************************/

time ./rop_tools -e /lib/x86_64-linux-gnu/libc-2.13.so -r -d 4 | tail -n 20
  0x000000000013d5ab:  c7 45 00 00 -- -- -- --   add rsp, 0x8
  0x000000000013d5af:  48 -- -- -- -- -- -- --   pop rbx
  0x000000000013d5b0:  31 -- -- -- -- -- -- --   pop rbp
  0x000000000013d5b1:  00 -- -- -- -- -- -- --   ret 

__libc_thread_freeres_fn + 0x13d5a3
  0x000000000013d5a3:  48 c7 45 00 00 00 00 00   mov qword [rbp+0x0], 0x0
  0x000000000013d5ab:  48 c7 45 00 -- -- -- --   add rsp, 0x8
  0x000000000013d5af:  48 -- -- -- -- -- -- --   pop rbx
  0x000000000013d5b0:  64 -- -- -- -- -- -- --   pop rbp
  0x000000000013d5b1:  8c -- -- -- -- -- -- --   ret 

__libc_thread_freeres_fn + 0x13d5a2
  0x000000000013d5a2:  64 48 c7 45 00 00 00 00   mov qword [fs:rbp+0x0], 0x0
  0x000000000013d5ab:  64 48 c7 45 -- -- -- --   add rsp, 0x8
  0x000000000013d5af:  48 -- -- -- -- -- -- --   pop rbx
  0x000000000013d5b0:  00 -- -- -- -- -- -- --   pop rbp
  0x000000000013d5b1:  00 -- -- -- -- -- -- --   ret 

10164 gadgets

real	0m1.738s
user	0m1.730s
sys	0m0.000s


/*******************************************************************************
*******************************************************************************/

time ./rop_tools -l tools/test1.lua | tail -n 24
      size	0
  0804d529 ret 
0804d537
  0804d537 add [ebx-0x7f], bl
    1
      offset	bh
      type	mem
      index	none
      scale	none
      lval	-127
      base	ebx
      size	8
    2
      offset	none
      type	reg
      index	none
      scale	none
      lval	0
      base	bl
      size	8
  0804d53a ret 
0804d546
  0804d546 leave 
  0804d547 ret 

real	0m0.183s
user	0m0.032s
sys	0m0.084s

